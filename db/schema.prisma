// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("USER")
  tokens         Token[]
  sessions       Session[]
  posts          Post[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt DateTime
  published   Boolean
  title       String
  metaTitle   String
  summary     String
  content     String
  slug        String   @unique
  timeToRead  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  image       String
}

model Technology {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  name             String
  logo             String
  desc             String
  link             String
  invertInDarkMode Boolean
}

model Project {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  summary     String
  link1       String
  link2       String
  image       String
  keywords    String
  slug        String
}
